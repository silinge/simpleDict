// Generated by view binder compiler. Do not edit!
package com.xvwilliam.simpledict.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.xvwilliam.simpledict.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView definitionTextView;

  @NonNull
  public final TextView phoneticTextView;

  @NonNull
  public final Button searchButton;

  @NonNull
  public final EditText searchInputEditText;

  @NonNull
  public final View statusBarBackground;

  @NonNull
  public final Toolbar toolbar;

  @NonNull
  public final TextView translationTextView;

  private ActivityMainBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView definitionTextView, @NonNull TextView phoneticTextView,
      @NonNull Button searchButton, @NonNull EditText searchInputEditText,
      @NonNull View statusBarBackground, @NonNull Toolbar toolbar,
      @NonNull TextView translationTextView) {
    this.rootView = rootView;
    this.definitionTextView = definitionTextView;
    this.phoneticTextView = phoneticTextView;
    this.searchButton = searchButton;
    this.searchInputEditText = searchInputEditText;
    this.statusBarBackground = statusBarBackground;
    this.toolbar = toolbar;
    this.translationTextView = translationTextView;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.definitionTextView;
      TextView definitionTextView = ViewBindings.findChildViewById(rootView, id);
      if (definitionTextView == null) {
        break missingId;
      }

      id = R.id.phoneticTextView;
      TextView phoneticTextView = ViewBindings.findChildViewById(rootView, id);
      if (phoneticTextView == null) {
        break missingId;
      }

      id = R.id.searchButton;
      Button searchButton = ViewBindings.findChildViewById(rootView, id);
      if (searchButton == null) {
        break missingId;
      }

      id = R.id.searchInputEditText;
      EditText searchInputEditText = ViewBindings.findChildViewById(rootView, id);
      if (searchInputEditText == null) {
        break missingId;
      }

      id = R.id.statusBarBackground;
      View statusBarBackground = ViewBindings.findChildViewById(rootView, id);
      if (statusBarBackground == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.translationTextView;
      TextView translationTextView = ViewBindings.findChildViewById(rootView, id);
      if (translationTextView == null) {
        break missingId;
      }

      return new ActivityMainBinding((ConstraintLayout) rootView, definitionTextView,
          phoneticTextView, searchButton, searchInputEditText, statusBarBackground, toolbar,
          translationTextView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
